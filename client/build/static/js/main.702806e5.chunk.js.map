{"version":3,"sources":["components/layouts/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layouts/Navbar.js","components/layouts/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layouts/Alert.js","actions/profile.js","components/layouts/Spinner.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/routing/PrivateRoute.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","action","placeholder","minLength","login","required","alerts","alert","length","map","key","getCurrentProfile","statusText","status","createProfile","history","edit","push","src","spinner","style","width","margin","display","alt","DashboardActions","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","Spinner","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","Component","component","rest","render","props","addExperience","put","message","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","match","params","initialState","getItem","repos","combineReducers","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,qC,mNCO9BC,EAAW,SAACC,EAAKC,GAAN,IAAiBC,EAAjB,uDAA2B,IAA3B,OAAoC,SAAAC,GAC1D,IAAMC,EAAKC,IAAKC,KAChBH,EAAS,CACPI,KCNqB,YDOrBC,QAAS,CAAER,MAAKC,YAAWG,QAG7BK,YAAW,kBAAMN,EAAS,CAAEI,KCTF,eDSsBC,QAASJ,MAAOF,KEGnDQ,EAXM,SAAAC,GAEfA,EAEFC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,SAGzCC,IAAMC,SAASC,QAAQC,OAAO,iBCO5BC,EAAW,yDAAM,WAAMb,GAAN,eAAAc,EAAA,6DAExBC,aAAaP,OACfD,EAAaQ,aAAaP,OAHA,kBAQRC,IAAMO,IAAI,aARF,OAQpBC,EARoB,OAU1BjB,EAAS,CACPI,KFvBqB,cEwBrBC,QAASY,EAAIC,OAZW,gDAe1BlB,EAAS,CACPI,KF3BoB,eEWI,yDAAN,uDC0CTe,eAJS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,QAG0B,CAAEC,ODqCpB,kBAAM,SAAAtB,GAC1BA,EAAS,CAAEI,KFlFgB,kBEmF3BJ,EAAS,CAAEI,KFzFS,cGkDPe,EAxDA,SAAC,GAAoD,IAAD,IAAjDE,KAAQE,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,QAAWF,EAAa,EAAbA,OAE9CG,EACJ,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,aAAT,eAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,cACP,uBAAGC,UAAU,gBAAmB,IAChC,0BAAMA,UAAU,WAAhB,eAGJ,4BACE,uBAAGC,QAASN,EAAQO,KAAK,MACvB,uBAAGF,UAAU,wBAA2B,IACxC,0BAAMA,UAAU,WAAhB,aAMFG,EACJ,4BACE,4BAAI,kBAAC,IAAD,CAAMJ,GAAG,aAAT,eACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,aAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,WAKR,OACE,yBAAKC,UAAU,kBACb,4BACE,kBAAC,IAAD,CAAMD,GAAG,KACP,uBAAGC,UAAU,gBADf,oBAIAH,GAAY,oCAAGD,EAAkBE,EAAYK,OCVtCX,eAJS,SAAAC,GAAK,MAAK,CAChCG,gBAAiBH,EAAMC,KAAKE,mBAGfJ,EAhCQ,SAAC,GAEtB,OAF8C,EAAtBI,gBAGf,kBAAC,IAAD,CAAUG,GAAG,eAIpB,6BAASC,UAAU,WACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,WAAd,iBACA,uBAAGA,UAAU,QAAb,wFAGA,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,mBAA/B,WACA,kBAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,iBAA5B,gB,sBCsFGR,eAJS,SAAAC,GAAK,MAAK,CAChCG,gBAAiBH,EAAMC,KAAKE,mBAGU,CAAE3B,WAAUmC,SHhE5B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CAA+B,WAAMlC,GAAN,qBAAAc,EAAA,6DAC/CqB,EAAS,CACbxB,QAAS,CACP,eAAgB,qBAGdyB,EAAOC,KAAKC,UAAU,CAAEN,OAAMC,QAAOC,aANU,kBASjCzB,IAAM8B,KAAK,aAAcH,EAAMD,GATE,OAS7ClB,EAT6C,OAUnDjB,EAAS,CACPI,KFhD0B,mBEiD1BC,QAASY,EAAIC,OAEflB,EAASa,KAd0C,mDAgB7C2B,EAAS,KAAIC,SAASvB,KAAKsB,SAE/BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI3C,EAASJ,EAAS+C,EAAM9C,IAAK,cAEvDG,EAAS,CACPI,KFzDuB,kBEoC0B,0DAA/B,yDGgETe,EAnGE,SAAC,GAA6C,IAA3CvB,EAA0C,EAA1CA,SAAUmC,EAAgC,EAAhCA,SAAUR,EAAsB,EAAtBA,gBAAsB,EAE5BqB,mBAAS,CACvCZ,KAAM,GACNC,MAAO,GACPC,SAAU,GACVW,UAAW,KAN+C,mBAErDC,EAFqD,KAE3CC,EAF2C,KASpDf,EAAqCc,EAArCd,KAAMC,EAA+Ba,EAA/Bb,MAAOC,EAAwBY,EAAxBZ,SAAUW,EAAcC,EAAdD,UAEzBG,EAAW,SAAAC,GAAC,OAAIF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAErEC,EAAQ,uCAAG,WAAMH,GAAN,SAAAnC,EAAA,sDACfmC,EAAEI,iBACEnB,IAAaW,EACfjD,EAAS,yBAA0B,UAEnCmC,EAAS,CAAEC,OAAMC,QAAOC,aALX,2CAAH,sDAUd,OAAIX,EACK,kBAAC,IAAD,CAAUG,GAAG,eAIpB,oCACE,wBAAIC,UAAU,sBAAd,WACA,uBAAGA,UAAU,QAAO,uBAAGA,UAAU,gBAAjC,wBACA,0BAAMA,UAAU,OAAO2B,OAAO,sBAAsBF,SAAU,SAAAH,GAAC,OAAIG,EAASH,KAE1E,yBAAKtB,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,OACZvB,KAAK,OACLmB,MAAOnB,EACPgB,SAAU,SAAAC,GAAC,OAAID,EAASC,OAK5B,yBAAKtB,UAAU,cACb,2BACEvB,KAAK,QACLmD,YAAY,gBACZvB,KAAK,QACLmB,MAAOlB,EACPe,SAAU,SAAAC,GAAC,OAAID,EAASC,MAG1B,2BAAOtB,UAAU,aAAjB,iFAKF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,WACLmD,YAAY,WACZvB,KAAK,WACLwB,UAAU,IACVL,MAAOjB,EACPc,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B,yBAAKtB,UAAU,cACb,2BACEvB,KAAK,WACLmD,YAAY,mBACZvB,KAAK,YACLwB,UAAU,IACVL,MAAON,EACPG,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B,2BAAO7C,KAAK,SAASuB,UAAU,kBAAkBwB,MAAM,cAEzD,uBAAGxB,UAAU,QAAb,4BAC2B,kBAAC,IAAD,CAAMD,GAAG,UAAT,gBChBlBP,eAJS,SAAAC,GAAK,MAAK,CAChCG,gBAAiBH,EAAMC,KAAKE,mBAGU,CAAEkC,MJJrB,SAACxB,EAAOC,GAAR,8CAAqB,WAAMlC,GAAN,qBAAAc,EAAA,6DAClCqB,EAAS,CACbxB,QAAS,CACP,eAAgB,qBAGdyB,EAAOC,KAAKC,UAAU,CAAEL,QAAOC,aANG,kBASpBzB,IAAM8B,KAAK,YAAaH,EAAMD,GATV,OAShClB,EATgC,OAUtCjB,EAAS,CACPI,KFxEuB,gBEyEvBC,QAASY,EAAIC,OAEflB,EAASa,KAd6B,mDAgBhC2B,EAAS,KAAIC,SAASvB,KAAKsB,SAE/BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI3C,EAASJ,EAAS+C,EAAM9C,IAAK,cAEvDG,EAAS,CACPI,KFjFoB,eE4DgB,0DAArB,wDIINe,EApED,SAAC,GAAgC,IAA9BsC,EAA6B,EAA7BA,MAAOlC,EAAsB,EAAtBA,gBAAsB,EAEZqB,mBAAS,CACvCX,MAAO,GACPC,SAAU,KAJgC,mBAErCY,EAFqC,KAE3BC,EAF2B,KAOpCd,EAAoBa,EAApBb,MAAOC,EAAaY,EAAbZ,SAETc,EAAW,SAAAC,GAAC,OAAIF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAErEC,EAAQ,uCAAG,WAAMH,GAAN,SAAAnC,EAAA,sDACfmC,EAAEI,iBACFI,EAAMxB,EAAOC,GAFE,2CAAH,sDAMd,OAAIX,EACK,kBAAC,IAAD,CAAUG,GAAG,eAIpB,oCACE,wBAAIC,UAAU,sBAAd,WACA,uBAAGA,UAAU,QAAO,uBAAGA,UAAU,gBAAjC,2BAEA,0BAAMA,UAAU,OAAOyB,SAAU,SAAAH,GAAC,OAAIG,EAASH,KAC7C,yBAAKtB,UAAU,cACb,2BACEvB,KAAK,QACLmD,YAAY,gBACZvB,KAAK,QACLmB,MAAOlB,EACPe,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBS,UAAQ,KAIZ,yBAAK/B,UAAU,cACb,2BACEvB,KAAK,WACLmD,YAAY,WACZvB,KAAK,WACLwB,UAAU,IACVL,MAAOjB,EACPc,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBS,UAAQ,KAGZ,2BAAOtD,KAAK,SAASuB,UAAU,kBAAkBwB,MAAM,WAGzD,uBAAGxB,UAAU,QAAb,0BACyB,kBAAC,IAAD,CAAMD,GAAG,aAAT,gBCxChBP,eAJS,SAAAC,GAAK,MAAK,CAChCuC,OAAQvC,EAAMwC,SAGDzC,EAhBD,SAAC,GAAD,IAAGwC,EAAH,EAAGA,OAAH,OAA2B,OAAXA,GAAmBA,EAAOE,OAAS,GAAKF,EAAOG,KAAI,SAAAF,GAAK,OACpF,yBACEG,IAAKH,EAAM3D,GACX0B,UAAS,sBAAiBiC,EAAM9D,YAC/B8D,EAAM/D,WCUEmE,EAAoB,yDAAM,WAAMhE,GAAN,eAAAc,EAAA,+EAGjBL,IAAMO,IAAI,mBAHO,OAG7BC,EAH6B,OAKnCjB,EAAS,CACPI,KRVqB,cQWrBC,QAASY,EAAIC,OAPoB,gDAUnClB,EAAS,CACPI,KRZuB,gBQavBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAdU,yDAAN,uDA2FpBC,EAAgB,SAACrB,EAAUsB,GAAX,IAAoBC,EAApB,sGAAqC,WAAMrE,GAAN,mBAAAc,EAAA,sEAGxDqB,EAAS,CACbxB,QAAS,CACP,eAAgB,qBAL0C,SAQ5CF,IAAM8B,KAAK,eAAgBO,EAAUX,GARO,OAQxDlB,EARwD,OAS9DjB,EAAS,CACPI,KRzGqB,cQ0GrBC,QAASY,EAAIC,OAEflB,EAASJ,EAASyE,EAAO,kBAAoB,kBAAmB,YAE3DA,GACHD,EAAQE,KAAK,cAhB+C,mDAoBxD9B,EAAS,KAAIC,SAASvB,KAAKsB,SAE/BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI3C,EAASJ,EAAS+C,EAAM9C,IAAK,cAEvDG,EAAS,CACPI,KRrHuB,gBQsHvBC,QAAS,CAAER,IAAK,KAAI4C,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UA1BF,0DAArC,wD,iBC1Gd,oBACb,oCACE,yBAAKK,IAAKC,IACRC,MAAO,CACLC,MAAO,QACPC,OAAQ,OACRC,QAAS,SAEXC,IAAI,iBCSKC,EAhBU,WACvB,OACE,yBAAKnD,UAAU,gBACb,kBAAC,IAAD,CAAMD,GAAG,gBAAgBC,UAAU,iBACjC,uBAAGA,UAAU,oCADf,iBAGA,kBAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,iBACnC,uBAAGA,UAAU,kCADf,mBAGA,kBAAC,IAAD,CAAMD,GAAG,iBAAiBC,UAAU,iBAClC,uBAAGA,UAAU,uCADf,oB,gBCsCSR,cAAQ,KAAM,CAAE4D,iBH0JC,SAAA9E,GAAE,8CAAI,WAAMD,GAAN,eAAAc,EAAA,+EAGhBL,IAAMuE,OAAN,kCAAwC/E,IAHxB,OAG5BgB,EAH4B,OAKlCjB,EAAS,CACPI,KRhMwB,iBQiMxBC,QAASY,EAAIC,OAEflB,EAASJ,EAAS,qBAAsB,YATN,gDAYlCI,EAAS,CACPI,KRzMuB,gBQ0MvBC,QAAS,CAAER,IAAK,KAAI4C,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAd9B,yDAAJ,wDG1JnB/C,EA7CI,SAAC,GAAsC,IAApC8D,EAAmC,EAAnCA,WAAYF,EAAuB,EAAvBA,iBAE1BG,EAAcD,EAAWnB,KAAI,SAAAqB,GAAG,OACpC,wBAAIpB,IAAKoB,EAAIC,KACX,4BAAKD,EAAIE,SACT,wBAAI1D,UAAU,WAAWwD,EAAIG,OAC7B,4BACE,kBAAC,IAAD,CAAQC,OAAO,YAAYJ,EAAIK,MADjC,MAEe,OAAXL,EAAIzD,GAAe,MAAU,kBAAC,IAAD,CAAQ6D,OAAO,YAAYJ,EAAIzD,KAGhE,4BACE,4BACEE,QAAS,kBAAMmD,EAAiBI,EAAIC,MACpCzD,UAAU,kBAFZ,eASN,OACE,oCACE,wBAAIA,UAAU,QAAd,0BACA,2BAAOA,UAAU,SACf,+BACE,4BACE,uCACA,wBAAIA,UAAU,WAAd,SACA,wBAAIA,UAAU,WAAd,WAGJ,+BACGuD,QCYI/D,cAAQ,KAAM,CAAEsE,gBJ+KA,SAAAxF,GAAE,8CAAI,WAAMD,GAAN,eAAAc,EAAA,+EAGfL,IAAMuE,OAAN,iCAAuC/E,IAHxB,OAG3BgB,EAH2B,OAKjCjB,EAAS,CACPI,KRrNwB,iBQsNxBC,QAASY,EAAIC,OAEflB,EAASJ,EAAS,oBAAqB,YATN,gDAYjCI,EAAS,CACPI,KR9NuB,gBQ+NvBC,QAAS,CAAER,IAAK,KAAI4C,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAd/B,yDAAJ,wDI/KlB/C,EA7CG,SAAC,GAAoC,IAAlCuE,EAAiC,EAAjCA,UAAWD,EAAsB,EAAtBA,gBAExBE,EAAaD,EAAU5B,KAAI,SAAA8B,GAAG,OAClC,wBAAI7B,IAAK6B,EAAIR,KACX,4BAAKQ,EAAIC,QACT,wBAAIlE,UAAU,WAAWiE,EAAIE,QAC7B,4BACE,kBAAC,IAAD,CAAQP,OAAO,YAAYK,EAAIJ,MADjC,MAEe,OAAXI,EAAIlE,GAAe,MAAU,kBAAC,IAAD,CAAQ6D,OAAO,YAAYK,EAAIlE,KAGhE,4BACE,4BACEE,QAAS,kBAAM6D,EAAgBG,EAAIR,MACnCzD,UAAU,kBAFZ,eASN,OACE,oCACE,wBAAIA,UAAU,QAAd,yBACA,2BAAOA,UAAU,SACf,+BACE,4BACE,sCACA,wBAAIA,UAAU,WAAd,UACA,wBAAIA,UAAU,WAAd,WAGJ,+BACGgE,QCuBIxE,eALS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZ0E,QAAS3E,EAAM2E,WAGuB,CAAE/B,oBAAmBgC,cLyLhC,yDAAM,WAAMhG,GAAN,SAAAc,EAAA,0DAE7BmF,OAAOC,QAAQ,gGAFc,0CAKvBzF,IAAMuE,OAAN,gBALuB,OAO7BhF,EAAS,CAAEI,KR5OY,kBQ6OvBJ,EAAS,CAAEI,KR3Oc,oBQ4OzBJ,EAASJ,EAAS,4CAA6C,YATlC,gDAY7BI,EAAS,CACPI,KRnPqB,gBQoPrBC,QAAS,CAAER,IAAK,KAAI4C,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAdnC,yDAAN,wDKzLd/C,EAnDG,SAAC,GAKZ,IAJL6C,EAII,EAJJA,kBACAgC,EAGI,EAHJA,cACQG,EAEJ,EAFJ9E,KAAQ8E,KAEJ,IADJJ,QAAWA,EACP,EADOA,QAASvE,EAChB,EADgBA,QAOpB,OAJA4E,qBAAU,WACRpC,MACC,CAACA,IAEGxC,GAAuB,OAAZuE,EAAmB,kBAACM,EAAD,MAAc,oCACjD,wBAAI1E,UAAU,sBAAd,aACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,YAC2CwE,GAAQA,EAAKnE,MAE3C,OAAZ+D,EACC,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYd,WAAYc,EAAQd,aAChC,kBAAC,EAAD,CAAWS,UAAWK,EAAQL,YAC9B,yBAAK/D,UAAU,QACb,4BAAQA,UAAU,iBAAiBC,QAASoE,GAC1C,uBAAGrE,UAAU,sBADf,wBAMF,oCACE,sFACA,kBAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,wBAArC,uBCwLKR,cAAQ,KAAM,CAAEgD,iBAAhBhD,CAAiCmF,aA3N1B,SAAC,GAAgC,IAA9BnC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QAAc,EAEpBxB,mBAAS,CACvCyC,QAAS,GACTkB,QAAS,GACTC,SAAU,GACVtC,OAAQ,GACRuC,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,KAduC,mBAE7ClE,EAF6C,KAEnCC,EAFmC,KAkBlDsC,EAYEvC,EAZFuC,QACAkB,EAWEzD,EAXFyD,QACAC,EAUE1D,EAVF0D,SACAtC,EASEpB,EATFoB,OACAuC,EAQE3D,EARF2D,OACAC,EAOE5D,EAPF4D,eACAC,EAME7D,EANF6D,IACAC,EAKE9D,EALF8D,QACAC,EAIE/D,EAJF+D,SACAC,EAGEhE,EAHFgE,SACAC,EAEEjE,EAFFiE,QACAC,EACElE,EADFkE,UA7BkD,EAgCFpE,oBAAS,GAhCP,mBAgC7CqE,EAhC6C,KAgCxBC,EAhCwB,KAkC9ClE,EAAW,SAAAC,GACfF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAQvD,OACE,oCACE,wBAAIxB,UAAU,sBAAd,uBAGA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,8DAIA,qDACA,0BAAMA,UAAU,OAAOyB,SAAU,SAAAH,GAAC,OAfrB,SAAAA,GACfA,EAAEI,iBACFc,EAAcrB,EAAUsB,GAagBhB,CAASH,KAC7C,yBAAKtB,UAAU,cACb,4BAAQK,KAAK,SAASmB,MAAOe,EAAQlB,SAAU,SAAAC,GAAC,OAAID,EAASC,KAC3D,4BAAQE,MAAM,KAAd,gCACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,uBAAd,uBACA,4BAAQA,MAAM,cAAd,yBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,2BAAOxB,UAAU,aAAjB,uDAIF,yBAAKA,UAAU,cACb,2BAAOvB,KAAK,OACVmD,YAAY,UACZvB,KAAK,UACLmB,MAAOkC,EACPrC,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B,2BAAOtB,UAAU,aAAjB,kDAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,UACZvB,KAAK,UACLmB,MAAOoD,EACPvD,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B,2BAAOtB,UAAU,aAAjB,2CAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,WACZvB,KAAK,WACLmB,MAAOqD,EACPxD,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B,2BAAOtB,UAAU,aAAjB,4CAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,WACZvB,KAAK,SACLmB,MAAOsD,EACPzD,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B,2BAAOtB,UAAU,aAAjB,oEAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,kBACZvB,KAAK,iBACLmB,MAAOuD,EACP1D,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B,2BAAOtB,UAAU,aAAjB,2EAGF,yBAAKA,UAAU,cACb,8BACE4B,YAAY,0BACZvB,KAAK,MACLmB,MAAOwD,EACP3D,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B,2BAAOtB,UAAU,aAAjB,oCAGF,yBAAKA,UAAU,QACb,4BACEC,QAAS,kBAAMsF,GAAoBD,IAAsB7G,KAAK,SAC9DuB,UAAU,iBAFZ,4BAMA,2CAGDsF,GAAuB,oCACtB,yBAAKtF,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACEvB,KAAK,OACLmD,YAAY,cACZvB,KAAK,UACLmB,MAAOyD,EACP5D,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B,yBAAKtB,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACEvB,KAAK,OACLmD,YAAY,eACZvB,KAAK,WACLmB,MAAO0D,EACP7D,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B,yBAAKtB,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACEvB,KAAK,OACLmD,YAAY,cACZvB,KAAK,UACLmB,MAAO4D,EACP/D,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B,yBAAKtB,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACEvB,KAAK,OACLmD,YAAY,eACZvB,KAAK,WACLmB,MAAO2D,EACP9D,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B,yBAAKtB,UAAU,2BACb,uBAAGA,UAAU,2BACb,2BACEvB,KAAK,OACLmD,YAAY,gBACZvB,KAAK,YACLmB,MAAO6D,EACPhE,SAAU,SAAAC,GAAC,OAAID,EAASC,QAM9B,2BAAO7C,KAAK,SAASuB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iBC8COP,eAJS,SAAAC,GAAK,MAAK,CAChC2E,QAAS3E,EAAM2E,WAGuB,CAAE5B,gBAAeH,qBAA1C7C,CAA+DmF,aA7P1D,SAAC,GAKd,IAAD,IAJJP,QAAWA,EAIP,EAJOA,QAASvE,EAIhB,EAJgBA,QACpB2C,EAGI,EAHJA,cACAH,EAEI,EAFJA,kBACAI,EACI,EADJA,QACI,EAE4BxB,mBAAS,CACvCyC,QAAS,GACTkB,QAAS,GACTC,SAAU,GACVtC,OAAQ,GACRuC,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,KAdT,mBAEGlE,EAFH,KAEaC,EAFb,OAiB8CH,oBAAS,GAjBvD,mBAiBGqE,EAjBH,KAiBwBC,EAjBxB,KAmBJd,qBAAU,WACRpC,IACAjB,EAAY,CACVsC,QAAS7D,IAAYuE,EAAQV,QAAU,GAAKU,EAAQV,QACpDkB,QAAS/E,IAAYuE,EAAQQ,QAAU,GAAKR,EAAQQ,QACpDC,SAAUhF,IAAYuE,EAAQS,SAAW,GAAKT,EAAQS,SACtDtC,OAAQ1C,IAAYuE,EAAQ7B,OAAS,GAAK6B,EAAQ7B,OAClDuC,OAAQjF,IAAYuE,EAAQU,OAAS,GAAKV,EAAQU,OAAOU,KAAK,KAC9DT,eAAgBlF,IAAYuE,EAAQW,eAAiB,GAAKX,EAAQW,eAClEC,IAAKnF,IAAYuE,EAAQY,IAAM,GAAKZ,EAAQY,IAC5CC,QAASpF,IAAYuE,EAAQqB,OAAS,GAAKrB,EAAQqB,OAAOR,QAC1DC,SAAUrF,IAAYuE,EAAQqB,OAAS,GAAKrB,EAAQqB,OAAOP,SAC3DC,SAAUtF,IAAYuE,EAAQqB,OAAS,GAAKrB,EAAQqB,OAAON,SAC3DC,QAASvF,IAAYuE,EAAQqB,OAAS,GAAKrB,EAAQqB,OAAOL,QAC1DC,UAAWxF,IAAYuE,EAAQqB,OAAS,GAAKrB,EAAQqB,OAAOJ,cAE7D,CAACxF,EAASwC,IAnCT,IAsCFqB,EAYEvC,EAZFuC,QACAkB,EAWEzD,EAXFyD,QACAC,EAUE1D,EAVF0D,SACAtC,EASEpB,EATFoB,OACAuC,EAQE3D,EARF2D,OACAC,EAOE5D,EAPF4D,eACAC,EAME7D,EANF6D,IACAC,EAKE9D,EALF8D,QACAC,EAIE/D,EAJF+D,SACAC,EAGEhE,EAHFgE,SACAC,EAEEjE,EAFFiE,QACAC,EACElE,EADFkE,UAGIhE,EAAW,SAAAC,GACfF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAQvD,OACE,oCACE,wBAAIxB,UAAU,sBAAd,uBAGA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,8DAIA,qDACA,0BAAMA,UAAU,OAAOyB,SAAU,SAAAH,GAAC,OAfrB,SAAAA,GACfA,EAAEI,iBACFc,EAAcrB,EAAUsB,GAAS,GAaOhB,CAASH,KAE7C,yBAAKtB,UAAU,cACb,4BAAQK,KAAK,SAASmB,MAAOe,EAAQlB,SAAUA,GAC7C,4BAAQG,MAAM,KAAd,gCACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,uBAAd,uBACA,4BAAQA,MAAM,cAAd,yBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,2BAAOxB,UAAU,aAAjB,uDAKF,yBAAKA,UAAU,cACb,2BAAOvB,KAAK,OACVmD,YAAY,UACZvB,KAAK,UACLmB,MAAOkC,EACPrC,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,kDAKF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,UACZvB,KAAK,UACLmB,MAAOoD,EACPvD,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,2CAKF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,WACZvB,KAAK,WACLmB,MAAOqD,EACPxD,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,4CAKF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,WACZvB,KAAK,SACLmB,MAAOsD,EACPzD,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,oEAKF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,kBACZvB,KAAK,iBACLmB,MAAOuD,EACP1D,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,2EAKF,yBAAKA,UAAU,cACb,8BACE4B,YAAY,0BACZvB,KAAK,MACLmB,MAAOwD,EACP3D,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,oCAGF,yBAAKA,UAAU,QACb,4BACEC,QAAS,kBAAMsF,GAAoBD,IAAsB7G,KAAK,SAC9DuB,UAAU,iBAFZ,4BAMA,2CAGDsF,GAAuB,oCACtB,yBAAKtF,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BAAOvB,KAAK,OAAOmD,YAAY,cAAcvB,KAAK,UAChDmB,MAAOyD,EACP5D,SAAUA,KAId,yBAAKrB,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACEvB,KAAK,OACLmD,YAAY,eACZvB,KAAK,WACLmB,MAAO0D,EACP7D,SAAUA,KAId,yBAAKrB,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACEvB,KAAK,OACLmD,YAAY,cACZvB,KAAK,UACLmB,MAAO4D,EACP/D,SAAUA,KAId,yBAAKrB,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACEvB,KAAK,OACLmD,YAAY,eACZvB,KAAK,WACLmB,MAAO2D,EACP9D,SAAUA,KAId,yBAAKrB,UAAU,2BACb,uBAAGA,UAAU,2BACb,2BACEvB,KAAK,OACLmD,YAAY,gBACZvB,KAAK,YACLmB,MAAO6D,EACPhE,SAAUA,MAMhB,2BAAO5C,KAAK,SAASuB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iB,QC3NOP,eAJS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,QAGCF,EAjBM,SAAC,GAAD,IAAckG,EAAd,EAAGC,UAAH,IAAyBjG,KAAQE,EAAjC,EAAiCA,gBAAiBC,EAAlD,EAAkDA,QAAc+F,EAAhE,2CAEnB,kBAAC,IAAD,iBACMA,EADN,CACYC,OAAQ,SAAAC,GAAK,OACpBlG,GAAoBC,EAAwC,kBAAC6F,EAAcI,GAA5C,kBAAC,IAAD,CAAU/F,GAAG,kBCuIpCP,cAAQ,KAAM,CAAEuG,cTDF,SAAC5E,EAAUsB,GAAX,8CAAuB,WAAMpE,GAAN,mBAAAc,EAAA,sEAG1CqB,EAAS,CACbxB,QAAS,CACP,eAAgB,qBAL4B,SAQ9BF,IAAMkH,IAAI,0BAA2B7E,EAAUX,GARjB,OAQ1ClB,EAR0C,OAUhDjB,EAAS,CACPI,KRvIwB,iBQwIxBC,QAASY,EAAIC,OAEflB,EAASJ,EAAS,mBAAoB,YACtCwE,EAAQE,KAAK,cAfmC,mDAkB1C9B,EAAS,KAAIC,SAASvB,KAAKsB,SAE/BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI3C,EAASJ,EAAS+C,EAAMiF,QAAS,cAE3D5H,EAAS,CACPI,KRrJuB,gBQsJvBC,QAAS,CAAER,IAAK,KAAI4C,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAxBhB,0DAAvB,wDSCd/C,EAvIO,SAAC,GAAgC,IAA9BuG,EAA6B,EAA7BA,cAAetD,EAAc,EAAdA,QAAc,EAEpBxB,mBAAS,CACvCyC,QAAS,GACTC,MAAO,GACPkB,SAAU,GACVhB,KAAM,GACN9D,GAAI,GACJmG,SAAS,EACTC,YAAa,KATqC,mBAE7ChF,EAF6C,KAEnCC,EAFmC,OAYXH,oBAAS,GAZE,mBAY7CmF,EAZ6C,KAY7BC,EAZ6B,KAelD3C,EAOEvC,EAPFuC,QACAC,EAMExC,EANFwC,MACAkB,EAKE1D,EALF0D,SACAhB,EAIE1C,EAJF0C,KACA9D,EAGEoB,EAHFpB,GACAmG,EAEE/E,EAFF+E,QACAC,EACEhF,EADFgF,YAGI9E,EAAW,SAAAC,GAAC,OAAIF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAO3E,OACE,oCACE,wBAAIxB,UAAU,sBAAd,qBAGA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,uBADf,0EAGA,qDAEA,0BAAMA,UAAU,OAAOyB,SAfV,SAAAH,GACfA,EAAEI,iBACFqE,EAAc5E,EAAUsB,KAcpB,yBAAKzC,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,cACZvB,KAAK,QACLmB,MAAOmC,EACPtC,SAAUA,EACVU,UAAQ,KAIZ,yBAAK/B,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,YACZvB,KAAK,UACLmB,MAAOkC,EACPrC,SAAUA,EACVU,UAAQ,KAIZ,yBAAK/B,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,WACZvB,KAAK,WACLmB,MAAOqD,EACPxD,SAAUA,KAId,yBAAKrB,UAAU,cACb,yCACA,2BACEvB,KAAK,OACL4B,KAAK,OACLmB,MAAOqC,EACPxC,SAAUA,KAId,yBAAKrB,UAAU,cACb,2BACE,2BACEvB,KAAK,WACL4B,KAAK,UACLiG,QAASJ,EACT1E,MAAO0E,EACP7E,SAAU,SAAAC,GACRF,EAAY,eAAKD,EAAN,CAAgB+E,SAAUA,KACrCG,GAAgBD,MAGnB,IAXH,gBAeF,yBAAKpG,UAAU,cACb,uCACA,2BACEvB,KAAK,OACL4B,KAAK,KACLmB,MAAOzB,EACPsB,SAAUA,EACVkF,SAAUH,EAAiB,WAAa,MAI5C,yBAAKpG,UAAU,cACb,8BACEK,KAAK,cACLmG,KAAK,KACLC,KAAK,IACL7E,YAAY,kBACZJ,MAAO2E,EACP9E,SAAUA,KAId,2BAAO5C,KAAK,SAASuB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,gBCYOP,cAAQ,KAAM,CAAEkH,aV8BH,SAACvF,EAAUsB,GAAX,8CAAuB,WAAMpE,GAAN,mBAAAc,EAAA,sEAGzCqB,EAAS,CACbxB,QAAS,CACP,eAAgB,qBAL2B,SAQ7BF,IAAMkH,IAAI,yBAA0B7E,EAAUX,GARjB,OAQzClB,EARyC,OAU/CjB,EAAS,CACPI,KRtKwB,iBQuKxBC,QAASY,EAAIC,OAEflB,EAASJ,EAAS,kBAAmB,YACrCwE,EAAQE,KAAK,cAfkC,mDAkBzC9B,EAAS,KAAIC,SAASvB,KAAKsB,SAE/BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI3C,EAASJ,EAAS+C,EAAMiF,QAAS,cAE3D5H,EAAS,CACPI,KRpLuB,gBQqLvBC,QAAS,CAAER,IAAK,KAAI4C,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAxBjB,0DAAvB,wDU9Bb/C,EAvIM,SAAC,GAA+B,IAA7BkH,EAA4B,EAA5BA,aAAcjE,EAAc,EAAdA,QAAc,EAElBxB,mBAAS,CACvCiD,OAAQ,GACRC,OAAQ,GACRwC,aAAc,GACd9C,KAAM,GACN9D,GAAI,GACJmG,SAAS,EACTC,YAAa,KATmC,mBAE3ChF,EAF2C,KAEjCC,EAFiC,OAYTH,oBAAS,GAZA,mBAY3CmF,EAZ2C,KAY3BC,EAZ2B,KAehDnC,EAOE/C,EAPF+C,OACAC,EAMEhD,EANFgD,OACAwC,EAKExF,EALFwF,aACA9C,EAIE1C,EAJF0C,KACA9D,EAGEoB,EAHFpB,GACAmG,EAEE/E,EAFF+E,QACAC,EACEhF,EADFgF,YAGI9E,EAAW,SAAAC,GAAC,OAAIF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAO3E,OACE,oCACE,wBAAIxB,UAAU,sBAAd,sBAGA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,uBADf,sDAGA,qDAEA,0BAAMA,UAAU,OAAOyB,SAfV,SAAAH,GACfA,EAAEI,iBACFgF,EAAavF,EAAUsB,KAcnB,yBAAKzC,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,uBACZvB,KAAK,SACLmB,MAAO0C,EACP7C,SAAUA,EACVU,UAAQ,KAIZ,yBAAK/B,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,0BACZvB,KAAK,SACLmB,MAAO2C,EACP9C,SAAUA,EACVU,UAAQ,KAIZ,yBAAK/B,UAAU,cACb,2BACEvB,KAAK,OACLmD,YAAY,iBACZvB,KAAK,eACLmB,MAAOmF,EACPtF,SAAUA,KAId,yBAAKrB,UAAU,cACb,yCACA,2BACEvB,KAAK,OACL4B,KAAK,OACLmB,MAAOqC,EACPxC,SAAUA,KAId,yBAAKrB,UAAU,cACb,2BACE,2BACEvB,KAAK,WACL4B,KAAK,UACLiG,QAASJ,EACT1E,MAAO0E,EACP7E,SAAU,SAAAC,GACRF,EAAY,eAAKD,EAAN,CAAgB+E,SAAUA,KACrCG,GAAgBD,MAGnB,IAXH,mBAeF,yBAAKpG,UAAU,cACb,uCACA,2BACEvB,KAAK,OACL4B,KAAK,KACLmB,MAAOzB,EACPsB,SAAUA,EACVkF,SAAUH,EAAiB,WAAa,MAI5C,yBAAKpG,UAAU,cACb,8BACEK,KAAK,cACLmG,KAAK,KACLC,KAAK,IACL7E,YAAY,sBACZJ,MAAO2E,EACP9E,SAAUA,KAId,2BAAO5C,KAAK,SAASuB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,gBC1FO6G,EAtCK,SAAC,GAQd,IAAD,IAPJxC,QAOI,IANFI,KAAQf,EAMN,EANMA,IAAKpD,EAMX,EANWA,KAAMwG,EAMjB,EANiBA,OACnBtE,EAKE,EALFA,OACAmB,EAIE,EAJFA,QAEAoB,GAEE,EAHFD,SAGE,EAFFC,QAGF,OACE,yBAAK9E,UAAU,oBACb,yBAAK4C,IAAKiE,EAAQ3D,IAAK2D,EAAQ7G,UAAU,cAEzC,6BACE,4BAAKK,GACL,2BAAIkC,EAAJ,IAAamB,GAAW,oCAAUA,IAClC,kBAAC,IAAD,CAAM3D,GAAE,mBAAc0D,GAAOzD,UAAU,mBAAvC,iBAKF,4BACG8E,EAAOgC,MAAM,EAAG,GAAG3E,KAAI,SAAC4E,EAAOC,GAAR,OACtB,wBAAI5E,IAAK4E,EAAOhH,UAAU,gBACxB,uBAAGA,UAAU,iBADf,IACoC+G,SCe/BvH,eAJS,SAAAC,GAAK,MAAK,CAChC2E,QAAS3E,EAAM2E,WAGuB,CAAE6C,YZHf,yDAAM,WAAM5I,GAAN,eAAAc,EAAA,6DAE/Bd,EAAS,CAAEI,KRxBgB,kBQsBI,kBAKXK,IAAMO,IAAI,gBALC,OAKvBC,EALuB,OAO7BjB,EAAS,CACPI,KRjCsB,eQkCtBC,QAASY,EAAIC,OATc,gDAY7BlB,EAAS,CACPI,KRpCuB,gBQqCvBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAhBI,yDAAN,wDYGZ/C,EAnCE,SAAC,GAAqD,IAAnDyH,EAAkD,EAAlDA,YAAkD,IAArC7C,QAAW8C,EAA0B,EAA1BA,SAAUrH,EAAgB,EAAhBA,QAOpD,OAJA4E,qBAAU,WACRwC,MACC,CAACA,IAGF,oCAEIpH,EAAU,kBAAC6E,EAAD,MAAc,oCACtB,wBAAI1E,UAAU,sBAAd,cACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,0BADf,uCAGA,yBAAKA,UAAU,YACZkH,EAAShF,OAAS,EACjBgF,EAAS/E,KAAI,SAAAiC,GAAO,OAAK,kBAAC,EAAD,CAAahC,IAAKgC,EAAQX,IAAKW,QAASA,OAC/D,0DCnBV+C,EAAW,SAAC,GAAD,IAEbC,EAFa,EAEbA,QACAC,EAHa,EAGbA,WACAC,EAJa,EAIbA,WACA5H,EALa,EAKbA,KALa,IAMbkB,KAAQ6C,EANK,EAMLA,IAAK8D,EANA,EAMAA,KAAMlH,EANN,EAMMA,KAAMwG,EANZ,EAMYA,OAAQrC,EANpB,EAMoBA,KAAMgD,EAN1B,EAM0BA,MAAOC,EANjC,EAMiCA,SAAUC,EAN3C,EAM2CA,KACxDC,EAPa,EAObA,YAPa,OAWb,yBAAK3H,UAAU,0BACb,6BACE,kBAAC,IAAD,CAAMD,GAAE,mBAAcyE,IACpB,yBAAKxE,UAAU,YAAY4C,IAAKiE,EAAQ3D,IAAI,KAC5C,4BAAK7C,KAIT,6BACE,uBAAGL,UAAU,QAAQuH,GACrB,uBAAGvH,UAAU,aAAb,aACY,kBAAC,IAAD,CAAQ4D,OAAO,cAAc8D,IAGxCC,GACC,oCAEE,4BACE1H,QAAS,kBAAMmH,EAAQ3D,IACvBhF,KAAK,SACLuB,UAAU,iBAEV,uBAAGA,UAAU,qBAAsB,IACnC,8BAAOwH,EAAMtF,OAAS,GAAK,8BAAOsF,EAAMtF,UAG1C,4BACEjC,QAAS,kBAAMoH,EAAW5D,IAC1BhF,KAAK,SACLuB,UAAU,iBAEV,uBAAGA,UAAU,wBAGf,kBAAC,IAAD,CAAMD,GAAE,iBAAY0D,GAAOzD,UAAU,mBAArC,aACa,IACVyH,EAASvF,OAAS,GACjB,0BAAMlC,UAAU,iBAAiByH,EAASvF,UAI5CxC,EAAKG,SAAW2E,IAAS9E,EAAK8E,KAAKf,KACnC,4BACExD,QAAS,kBAAMqH,EAAW7D,IAC1BhF,KAAK,SACLuB,UAAU,kBAEV,uBAAGA,UAAU,sBAW7BmH,EAASS,aAAe,CACtBD,aAAa,GAYf,IAIenI,eAJS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,QAG0B,CAAE0H,QCvDnB,SAAA9I,GAAE,8CAAI,WAAMD,GAAN,eAAAc,EAAA,+EAGPL,IAAMkH,IAAN,0BAA6B1H,IAHtB,OAGnBgB,EAHmB,OAKzBjB,EAAS,CACPI,KtBbsB,esBctBC,QAAS,CAAEJ,KAAIkJ,MAAOlI,EAAIC,QAPH,gDAWzBlB,EAAS,CACPI,KtBxBoB,asByBpBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAfA,yDAAJ,uDDuD0B8E,WChCzB,SAAA/I,GAAE,8CAAI,WAAMD,GAAN,eAAAc,EAAA,+EAGVL,IAAMkH,IAAN,4BAA+B1H,IAHrB,OAGtBgB,EAHsB,OAK5BjB,EAAS,CACPI,KtBpCsB,esBqCtBC,QAAS,CAAEJ,KAAIkJ,MAAOlI,EAAIC,QAPA,gDAW5BlB,EAAS,CACPI,KtB/CoB,asBgDpBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAfG,yDAAJ,uDDgCmC+E,WCTrC,SAAAhJ,GAAE,8CAAI,WAAMD,GAAN,SAAAc,EAAA,+EAGtBL,IAAMuE,OAAN,qBAA2B/E,IAHL,OAK5BD,EAAS,CACPI,KtBjEqB,csBkErBC,QAASJ,IAGXD,EAASJ,EAAS,eAAgB,YAVN,gDAa5BI,EAAS,CACPI,KtBxEoB,asByEpBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAjBG,yDAAJ,wDDSb/C,CAA8D2H,GEnD9D3H,cAAQ,KAAM,CAAEqI,QDmER,SAAA1G,GAAQ,8CAAI,WAAM9C,GAAN,iBAAAc,EAAA,6DAE3BqB,EAAS,CACbxB,QAAS,CACP,eAAgB,qBAJa,kBASbF,IAAM8B,KAAN,aAAyBO,EAAUX,GATtB,OASzBlB,EATyB,OAW/BjB,EAAS,CACPI,KtBjGkB,WsBkGlBC,QAASY,EAAIC,OAGflB,EAASJ,EAAS,eAAgB,YAhBH,gDAmB/BI,EAAS,CACPI,KtBvGoB,asBwGpBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAvBM,yDAAJ,wDCnEhB/C,EArCE,SAAC,GAAiB,IAAfqI,EAAc,EAAdA,QAAc,EAER5G,mBAAS,IAFD,mBAEzBsG,EAFyB,KAEnBO,EAFmB,KAIhC,OACE,yBAAK9H,UAAU,aACb,yBAAKA,UAAU,gBACb,iDAGF,0BACEA,UAAU,YACVyB,SAAU,SAAAH,GACRA,EAAEI,iBACFmG,EAAQ,CAAEN,SACVO,EAAQ,MAEV,8BACEzH,KAAK,OACLmG,KAAK,KACLC,KAAK,IACL7E,YAAY,gBACZJ,MAAO+F,EACPxF,UAAQ,EACRV,SAAU,SAAAC,GAAC,OAAIwG,EAAQxG,EAAEC,OAAOC,UAElC,2BAAO/C,KAAK,SAASuB,UAAU,oBAAoBwB,MAAM,gBCelDhC,eAJS,SAAAC,GAAK,MAAK,CAChCmB,KAAMnB,EAAMmB,QAG0B,CAAEmH,SF/BlB,yDAAM,WAAM1J,GAAN,eAAAc,EAAA,+EAGRL,IAAMO,IAAI,cAHF,OAGpBC,EAHoB,OAK1BjB,EAAS,CACPI,KtBCmB,YsBAnBC,QAASY,EAAIC,OAPW,gDAW1BlB,EAAS,CACPI,KtBDoB,asBEpBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAfC,yDAAN,wDE+BT/C,EAtCD,SAAC,GAA4C,IAA1CuI,EAAyC,EAAzCA,SAAyC,IAA/BnH,KAAQoH,EAAuB,EAAvBA,MAAOnI,EAAgB,EAAhBA,QAMxC,OAJA4E,qBAAU,WACRsD,MACC,CAACA,IAGFlI,EAAU,kBAAC6E,EAAD,MACR,oCACE,wBAAI1E,UAAU,sBAAd,SAEA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,6BAIA,kBAAC,EAAD,MAEA,yBAAKA,UAAU,SACZgI,EAAM7F,KAAI,SAAAvB,GAAI,OACb,kBAAC,EAAD,CAAUwB,IAAKxB,EAAK6C,IAAK7C,KAAMA,YCc5BpB,cAAQ,KAAM,CAAEyI,WH0HL,SAACC,EAAQ/G,GAAT,8CAAsB,WAAM9C,GAAN,iBAAAc,EAAA,6DAExCqB,EAAS,CACbxB,QAAS,CACP,eAAgB,qBAJ0B,kBAS1BF,IAAM8B,KAAN,6BAAiCsH,GAAU/G,EAAUX,GAT3B,OAStClB,EATsC,OAW5CjB,EAAS,CACPI,KtBnJqB,csBoJrBC,QAASY,EAAIC,OAGflB,EAASJ,EAAS,gBAAiB,YAhBS,gDAmB5CI,EAAS,CACPI,KtB7JoB,asB8JpBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAvBmB,yDAAtB,wDG1HX/C,EApCK,SAAC,GAA4B,IAA1B0I,EAAyB,EAAzBA,OAAQD,EAAiB,EAAjBA,WAAiB,EAEtBhH,mBAAS,IAFa,mBAEvCsG,EAFuC,KAEjCO,EAFiC,KAI9C,OACE,yBAAK9H,UAAU,aACb,yBAAKA,UAAU,gBACb,gDAEF,0BACEA,UAAU,YACVyB,SAAU,SAAAH,GACRA,EAAEI,iBACFuG,EAAWC,EAAQ,CAAEX,SACrBO,EAAQ,MAGV,8BACEzH,KAAK,OACLmG,KAAK,KACLC,KAAK,IACL7E,YAAY,mBACZJ,MAAO+F,EACPlG,SAAU,SAAAC,GAAC,OAAIwG,EAAQxG,EAAEC,OAAOC,QAChCO,UAAQ,IAEV,2BAAOtD,KAAK,SAASuB,UAAU,oBAAoBwB,MAAM,gBCuBlDhC,eAJS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,QAKZ,CAAEyI,cJ0IyB,SAACD,EAAQE,GAAT,8CAAuB,WAAM/J,GAAN,SAAAc,EAAA,+EAE1CL,IAAMuE,OAAN,6BAAmC6E,EAAnC,YAA6CE,IAFH,OAIhD/J,EAAS,CACPI,KtB1KwB,iBsB2KxBC,QAAS0J,IAGX/J,EAASJ,EAAS,kBAAmB,YATW,gDAWhDI,EAAS,CACPI,KtBpLoB,asBqLpBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAfuB,yDAAvB,wDI5Id/C,EA/CK,SAAC,GAAD,IAEhB0I,EAFgB,EAEhBA,OAFgB,IAGhBG,QAAW5E,EAHK,EAGLA,IAAK8D,EAHA,EAGAA,KAAMlH,EAHN,EAGMA,KAAMwG,EAHZ,EAGYA,OAAQrC,EAHpB,EAGoBA,KAAMkD,EAH1B,EAG0BA,KAC1ChI,EAJgB,EAIhBA,KACAyI,EALgB,EAKhBA,cALgB,OAShB,yBAAKnI,UAAU,0BACb,6BACE,kBAAC,IAAD,CAAMD,GAAE,mBAAcyE,IACpB,yBAAKxE,UAAU,YAAY4C,IAAKiE,EAAQ3D,IAAI,KAC5C,4BAAK7C,KAIT,6BACE,uBAAGL,UAAU,QAAQuH,GACrB,uBAAGvH,UAAU,aAAb,aACY,kBAAC,IAAD,CAAQ4D,OAAO,cAAc8D,KAGvChI,EAAKG,SAAW2E,IAAS9E,EAAK8E,KAAKf,KACnC,4BACExD,QAAS,kBAAMkI,EAAcD,EAAQzE,IACrChF,KAAK,SACLuB,UAAU,kBAEV,uBAAGA,UAAU,uBCeVR,eAJS,SAAAC,GAAK,MAAK,CAChCmB,KAAMnB,EAAMmB,QAG0B,CAAE0H,QLyFnB,SAAAhK,GAAE,8CAAI,WAAMD,GAAN,eAAAc,EAAA,+EAGPL,IAAMO,IAAN,qBAAwBf,IAHjB,OAGnBgB,EAHmB,OAKzBjB,EAAS,CACPI,KtB3HkB,WsB4HlBC,QAASY,EAAIC,OAPU,gDAWzBlB,EAAS,CACPI,KtB9HoB,asB+HpBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAfA,yDAAJ,wDKzFV/C,EAzCF,SAAC,GAAiD,IAA/C8I,EAA8C,EAA9CA,QAA8C,IAArC1H,KAAQA,EAA6B,EAA7BA,KAAMf,EAAuB,EAAvBA,QAAW0I,EAAY,EAAZA,MAMhD,OAJA9D,qBAAU,WACR6D,EAAQC,EAAMC,OAAOlK,MACpB,CAACgK,EAASC,EAAMC,OAAOlK,KAEnBuB,GAAoB,OAATe,EAChB,kBAAC8D,EAAD,MAEE,oCACE,kBAAC,IAAD,CAAM3E,GAAG,SAASC,UAAU,OAA5B,iBAIA,kBAAC,EAAD,CAAUY,KAAMA,EAAM+G,aAAa,IAEnC,kBAAC,EAAD,CAAaO,OAAQtH,EAAK6C,MAE1B,yBAAKzD,UAAU,YACZY,EAAK6G,SAAStF,KAAI,SAAAkG,GAAO,OACxB,kBAAC,EAAD,CACEjG,IAAKiG,EAAQ5E,IACb4E,QAASA,EACTH,OAAQtH,EAAK6C,c,4CC3BrBgF,GAAe,GCSfA,GAAe,CACnB5J,MAAOO,aAAasJ,QAAQ,SAC5B9I,gBAAiB,KACjBC,SAAS,EACT2E,KAAM,MCNFiE,GAAe,CACnBrE,QAAS,KACT8C,SAAU,GACVyB,MAAO,GACP9I,SAAS,EACTmB,MAAO,ICPHyH,GAAe,CACnBT,MAAO,GACPpH,KAAM,KACNf,SAAS,EACTmB,MAAO,ICLM4H,8BAAgB,CAC7B3G,MJHa,WAAyC,IAA/BxC,EAA8B,uDAAtBgJ,GAAc9G,EAAQ,uCAC7ClD,EAAkBkD,EAAlBlD,KAAMC,EAAYiD,EAAZjD,QAEd,OAAQD,GACN,I5BRqB,Y4BSnB,MAAM,GAAN,oBAAWgB,GAAX,CAAkBf,IACpB,I5BTwB,e4BUtB,OAAOe,EAAMoJ,QAAO,SAAA5G,GAAK,OAAIA,EAAM3D,KAAOI,KAC5C,QACE,OAAOe,IILXC,KHUa,WAAyC,IAA/BD,EAA8B,uDAAtBgJ,GAAc9G,EAAQ,uCAE7ClD,EAAkBkD,EAAlBlD,KAAMC,EAAYiD,EAAZjD,QAEd,OAAQD,GACN,I7BnBuB,c6BoBrB,OAAO,eACFgB,EADL,CAEEG,iBAAiB,EACjBC,SAAS,EACT2E,KAAM9F,IAEV,I7B5B4B,mB6B6B5B,I7BzByB,gB6B2BvB,OADAU,aAAa0J,QAAQ,QAASpK,EAAQG,OAC/B,eACFY,EADL,GAEKf,EAFL,CAGEkB,iBAAiB,EACjBC,SAAS,IAEb,I7BpCyB,gB6BqCzB,I7BnCsB,a6BoCtB,I7BlCsB,a6BmCtB,I7BlCkB,S6BmClB,I7B3B2B,kB6B6BzB,OADAT,aAAa2J,WAAW,SACjB,eACFtJ,EADL,CAEEZ,MAAO,KACPe,iBAAiB,EACjBC,SAAS,IAEb,QACE,OAAOJ,IG3CX2E,QFQa,WAAyC,IAA/B3E,EAA8B,uDAAtBgJ,GAAc9G,EAAQ,uCAC7ClD,EAAkBkD,EAAlBlD,KAAMC,EAAYiD,EAAZjD,QAEd,OAAQD,GACN,I9BXuB,c8BYvB,I9BP0B,iB8BQxB,OAAO,eACFgB,EADL,CAEE2E,QAAS1F,EACTmB,SAAS,IAEb,I9BjBwB,e8BkBtB,OAAO,eACFJ,EADL,CAEEyH,SAAUxI,EACVmB,SAAS,IAEb,I9BrByB,gB8BsBvB,OAAO,eACFJ,EADL,CAEEuB,MAAOtC,EACPmB,SAAS,IAEb,I9B1ByB,gB8B2BvB,OAAO,eACFJ,EADL,CAEE2E,QAAS,KACTuE,MAAO,GACP9I,SAAS,IAEb,I9BnCqB,Y8BoCnB,OAAO,eACFJ,EADL,CAEEkJ,MAAOjK,EACPmB,SAAS,IAEb,QACE,OAAOJ,IE5CXmB,KDIa,WAAyC,IAA/BnB,EAA8B,uDAAtBgJ,GAAc9G,EAAQ,uCAC7ClD,EAAkBkD,EAAlBlD,KAAMC,EAAYiD,EAAZjD,QAEd,OAAQD,GACN,I/BAqB,Y+BCnB,OAAO,eACFgB,EADL,CAEEuI,MAAOtJ,EACPmB,SAAS,IAEb,I/BLoB,W+BMlB,OAAO,eACFJ,EADL,CAEEmB,KAAMlC,EACNmB,SAAS,IAEb,I/BVoB,W+BWlB,OAAO,eACFJ,EADL,CAEEuI,MAAM,CAAEtJ,GAAH,oBAAee,EAAMuI,QAC1BnI,SAAS,IAEb,I/BfuB,c+BgBrB,OAAO,eACFJ,EADL,CAEEuI,MAAOvI,EAAMuI,MAAMa,QAAO,SAAAjI,GAAI,OAAIA,EAAK6C,MAAQ/E,KAC/CmB,SAAS,IAEb,I/BpBsB,a+BqBpB,OAAO,eACFJ,EADL,CAEEuB,MAAOtC,EACPmB,SAAS,IAEb,I/BrBwB,e+BsBtB,OAAO,eACFJ,EADL,CAEEuI,MAAOvI,EAAMuI,MAAM7F,KAAI,SAAAvB,GAAI,OAAIA,EAAK6C,MAAQ/E,EAAQJ,GAArB,eAA+BsC,EAA/B,CAAqC4G,MAAO9I,EAAQ8I,QAAU5G,KAC7Ff,SAAS,IAEb,I/B9BuB,c+B+BrB,OAAO,eACFJ,EADL,CAEEmB,KAAK,eAAMnB,EAAMmB,KAAb,CAAmB6G,SAAU/I,IACjCmB,SAAS,IAEb,I/BnC0B,iB+BoCxB,OAAO,eACFJ,EADL,CAEEmB,KAAK,eACAnB,EAAMmB,KADP,CAEF6G,SAAUhI,EAAMmB,KAAK6G,SAASoB,QAC5B,SAAAR,GAAO,OAAIA,EAAQ5E,MAAQ/E,OAG/BmB,SAAS,IAEb,QACE,OAAOJ,MEtEPuJ,GAAa,CAACC,MAILC,GAFDC,uBAAYC,GAHL,GAGgCC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCuD7EO,GA5DI,SAAC,GAWb,IAAD,IAVJnF,QAEE7B,GAQE,EATFuC,OASE,EARFvC,QACAmB,EAOE,EAPFA,QACAmB,EAME,EANFA,SACAD,EAKE,EALFA,QACAa,EAIE,EAJFA,OAIE,KAHFT,IAGE,EAFFR,MAAQnE,EAEN,EAFMA,KAAMwG,EAEZ,EAFYA,OAGhB,OACE,yBAAK7G,UAAU,8BACb,yBAAKA,UAAU,iBAAiB4C,IAAKiE,EAAQ3D,IAAI,KACjD,wBAAIlD,UAAU,SAASK,GACvB,uBAAGL,UAAU,QACVuC,EADH,IACYmB,GAAW,qCAAWA,IAElC,2BAAImB,GAAY,8BAAOA,IACvB,yBAAK7E,UAAU,cACZ4E,GACC,uBAAG1E,KAAM0E,EAASrD,OAAO,SAASiI,IAAI,uBACpC,uBAAGxJ,UAAU,wBAGhByF,GAAUA,EAAOR,SAChB,uBAAG/E,KAAMuF,EAAOR,QAAS1D,OAAO,SAASiI,IAAI,uBAC3C,uBAAGxJ,UAAU,0BAGhByF,GAAUA,EAAOP,UAChB,uBAAGhF,KAAMuF,EAAOP,SAAU3D,OAAO,SAASiI,IAAI,uBAC5C,uBAAGxJ,UAAU,2BAGhByF,GAAUA,EAAON,UAChB,uBAAGjF,KAAMuF,EAAON,SAAU5D,OAAO,SAASiI,IAAI,uBAC5C,uBAAGxJ,UAAU,2BAGhByF,GAAUA,EAAOL,SAChB,uBAAGlF,KAAMuF,EAAOL,QAAS7D,OAAO,SAASiI,IAAI,uBAC3C,uBAAGxJ,UAAU,0BAGhByF,GAAUA,EAAOJ,WAChB,uBAAGnF,KAAMuF,EAAOJ,UAAW9D,OAAO,SAASiI,IAAI,uBAC7C,uBAAGxJ,UAAU,+BCfVyJ,GAjCM,SAAC,GAAkD,IAAD,IAA/CrF,QAAWY,EAAoC,EAApCA,IAAKF,EAA+B,EAA/BA,OAAgBzE,EAAe,EAAvBmE,KAAQnE,KACtD,OACE,yBAAKL,UAAU,8BACZgF,GACC,oCACE,wBAAIhF,UAAU,gBACXK,EAAKqJ,OAAOC,MAAM,KAAK,GAD1B,UAGA,2BACG3E,GAEH,yBAAKhF,UAAU,UAInB,wBAAIA,UAAU,gBAAd,aAEA,yBAAKA,UAAU,UACZ8E,EAAO3C,KAAI,SAAC4E,EAAOC,GAAR,OACV,yBAAKhH,UAAU,MAAMoC,IAAK4E,GACxB,uBAAGhH,UAAU,gBADf,IACmC+G,SCY9B6C,GA/BW,SAAC,GAUpB,IAAD,IATJtG,WACEI,EAQE,EARFA,QACAC,EAOE,EAPFA,MAGA5D,GAIE,EANF8E,SAME,EALFqB,QAKE,EAJFnG,IACA8D,EAGE,EAHFA,KACAsC,EAEE,EAFFA,YAGF,OACE,6BACE,wBAAInG,UAAU,aAAa0D,GAC3B,2BACE,kBAAC,IAAD,CAAQE,OAAO,cAAcC,GAD/B,MACkD9D,EAAa,kBAAC,IAAD,CAAQ6D,OAAO,cAAc7D,GAArC,OAEvD,2BACE,8CADF,IAC+B4D,GAE/B,2BACE,iDADF,IACkCwC,KCazB0D,GAlCU,SAAC,GAUnB,IAAD,IATJ9F,UACEG,EAQE,EARFA,OACAC,EAOE,EAPFA,OACAwC,EAME,EANFA,aAEA5G,GAIE,EALFmG,QAKE,EAJFnG,IACA8D,EAGE,EAHFA,KACAsC,EAEE,EAFFA,YAGF,OACE,6BACE,wBAAInG,UAAU,aAAakE,GAC3B,2BACE,kBAAC,IAAD,CAAQN,OAAO,cAAcC,GAD/B,MACkD9D,EAAa,kBAAC,IAAD,CAAQ6D,OAAO,cAAc7D,GAArC,OAEvD,2BACE,4CADF,IAC6BoE,GAE7B,2BACE,oDADF,IACqCwC,GAErC,2BACE,iDADF,IACkCR,KCmCzB3G,gBAJS,SAAAC,GAAK,MAAK,CAChCkJ,MAAOlJ,EAAM2E,QAAQuE,SAGiB,CAAEmB,e9BwBZ,SAAAC,GAAQ,8CAAI,WAAM1L,GAAN,eAAAc,EAAA,+EAGpBL,IAAMO,IAAN,8BAAiC0K,IAHb,OAGhCzK,EAHgC,OAKtCjB,EAAS,CACPI,KR7EmB,YQ8EnBC,QAASY,EAAIC,OAPuB,gDAUtClB,EAAS,CACPI,KRjFuB,gBQkFvBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAda,yDAAJ,wD8BxBvB/C,EAzDO,SAAC,GAAyC,IAAvCuK,EAAsC,EAAtCA,SAAUD,EAA4B,EAA5BA,eAAgBnB,EAAY,EAAZA,MAMjD,OAJAlE,qBAAU,WACRqF,EAAeC,KACd,CAACD,EAAgBC,IAGlB,yBAAK/J,UAAU,kBACb,wBAAIA,UAAU,qBAAd,gBACW,OAAV2I,EACC,kBAACjE,EAAD,MAEEiE,EAAMxG,KAAI,SAAA6H,GAAI,OACZ,yBAAK5H,IAAK4H,EAAK1L,GAAI0B,UAAU,0BAE3B,6BACE,4BACE,uBAAGE,KAAM8J,EAAKC,SAAU1I,OAAO,SAASiI,IAAI,uBACzCQ,EAAK3J,OAGV,2BACG2J,EAAK7D,cAIV,6BACE,4BACE,wBAAInG,UAAU,uBAAd,UACUgK,EAAKE,kBAEf,wBAAIlK,UAAU,oBAAd,aACagK,EAAKG,gBAElB,wBAAInK,UAAU,qBAAd,UACUgK,EAAKI,uBC6DlB5K,gBALS,SAAAC,GAAK,MAAK,CAChC2E,QAAS3E,EAAM2E,QACf1E,KAAMD,EAAMC,QAG0B,CAAE2K,e/BtCZ,SAAAC,GAAM,8CAAI,WAAMjM,GAAN,eAAAc,EAAA,+EAGlBL,IAAMO,IAAN,4BAA+BiL,IAHb,OAG9BhL,EAH8B,OAKpCjB,EAAS,CACPI,KRxDqB,cQyDrBC,QAASY,EAAIC,OAPqB,gDAWpClB,EAAS,CACPI,KR3DuB,gBQ4DvBC,QAAS,CACPR,IAAK,KAAI4C,SAASwB,WAClBC,OAAQ,KAAIzB,SAASyB,UAfW,yDAAJ,wD+BsCrB/C,EA1FC,SAAC,GAKV,IAJL6K,EAII,EAJJA,eAII,IAHJjG,QAAWA,EAGP,EAHOA,QAASvE,EAGhB,EAHgBA,QACpBH,EAEI,EAFJA,KACA6I,EACI,EADJA,MAMA,OAJA9D,qBAAU,WACR4F,EAAe9B,EAAMC,OAAOlK,MAC3B,CAAC+L,EAAgB9B,EAAMC,OAAOlK,KAG/B,kBAAC,WAAD,KACe,OAAZ8F,GAAoBvE,EACnB,kBAAC6E,EAAD,MAEE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM3E,GAAG,YAAYC,UAAU,iBAA/B,oBAGCN,EAAKE,kBACa,IAAjBF,EAAKG,SACLH,EAAK8E,KAAKf,MAAQW,EAAQI,KAAKf,KAC7B,kBAAC,IAAD,CAAM1D,GAAG,gBAAgBC,UAAU,gBAAnC,gBAKJ,yBAAKA,UAAU,qBACb,kBAAC,GAAD,CAAYoE,QAASA,IACrB,kBAAC,GAAD,CAAcA,QAASA,IAEvB,yBAAKpE,UAAU,4BACb,wBAAIA,UAAU,gBAAd,cAGCoE,EAAQd,WAAWpB,OAAS,EAC3B,oCACGkC,EAAQd,WAAWnB,KAAI,SAAAmB,GAAU,OAChC,kBAAC,GAAD,CACElB,IAAKkB,EAAWG,IAChBH,WAAYA,QAKhB,0DAIN,yBAAKtD,UAAU,4BACb,wBAAIA,UAAU,gBAAd,aAGCoE,EAAQL,UAAU7B,OAAS,EAC1B,oCACGkC,EAAQL,UAAU5B,KAAI,SAAA4B,GAAS,OAC9B,kBAAC,GAAD,CACE3B,IAAK2B,EAAUN,IACfM,UAAWA,QAKf,yDAILK,EAAQW,gBACP,kBAAC,GAAD,CAAegF,SAAU3F,EAAQW,uBCpD7C3F,aAAaP,OACfD,EAAaQ,aAAaP,OAG5B,IAgCe0L,GAhCH,WAIV,OAFA9F,qBAAU,WAAQyE,GAAM7K,SAASa,OAAe,IAG9C,kBAAC,IAAD,CAAUgK,MAAOA,IACf,kBAAC,IAAD,KACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAI9E,UAAW+E,IACjC,6BAAS1K,UAAU,aACjB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwK,OAAK,EAACC,KAAK,YAAY9E,UAAWgF,IACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAAS9E,UAAWiF,IACtC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAY9E,UAAWkF,IACzC,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,eAAe9E,UAAWmF,KAC5C,kBAAC,EAAD,CAAcN,OAAK,EAACC,KAAK,aAAa9E,UAAWoF,IACjD,kBAAC,EAAD,CAAcP,OAAK,EAACC,KAAK,kBAAkB9E,UAAWqF,IACtD,kBAAC,EAAD,CAAcR,OAAK,EAACC,KAAK,gBAAgB9E,UAAWsF,IACpD,kBAAC,EAAD,CAAcT,OAAK,EAACC,KAAK,kBAAkB9E,UAAWuF,IACtD,kBAAC,EAAD,CAAcV,OAAK,EAACC,KAAK,iBAAiB9E,UAAWwF,IACrD,kBAAC,EAAD,CAAcX,OAAK,EAACC,KAAK,SAAS9E,UAAWyF,IAC7C,kBAAC,EAAD,CAAcZ,OAAK,EAACC,KAAK,aAAa9E,UAAW0F,UClD/DC,IAASzF,OAAO,kBAAC,GAAD,MAAS0F,SAASC,eAAe,W","file":"static/js/main.702806e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.d42bb2f0.gif\";","// -----------------\n// Actions / alert\n// -----------------\n\nimport uuid from 'uuid'\nimport { SET_ALERT, REMOVE_ALERT } from './types'\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4()\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  })\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\n\n}","// -----------------\n// Actions / types\n// -----------------\n\nexport const SET_ALERT = 'SET_ALERT'\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\nexport const USER_LOADED = 'USER_LOADED'\nexport const AUTH_ERROR = 'AUTH_ERROR'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const LOGOUT = 'LOGOUT'\n\nexport const GET_PROFILE = 'GET_PROFILE'\nexport const GET_PROFILES = 'GET_PROFILES'\nexport const GET_REPOS = 'GET_REPOS'\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\n\nexport const GET_POSTS = 'GET_POSTS'\nexport const GET_POST = 'GET_POST'\nexport const ADD_POST = 'ADD_POST'\nexport const DELETE_POST = 'DELETE_POST'\nexport const POST_ERROR = 'POST_ERROR'\n\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT'\n\nexport const UPDATE_LIKES = 'UPDATE_LIKES'","// ----------------------\n// Utils / setAuthToken\n// ----------------------\n\nimport axios from 'axios'\n\nconst setAuthToken = token => {\n  // If there is a token in local storage\n  if (token) {\n    // Set global header\n    axios.defaults.headers.common['x-auth-token'] = token\n  } else {\n    // If not token, delete from global header\n    delete axios.defaults.headers.common['x-auth-token']\n  }\n}\n\nexport default setAuthToken","// -----------------\n// Actions / auth\n// -----------------\n\nimport axios from 'axios'\nimport { setAlert } from './alert'\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types'\nimport setAuthToken from '../utils/setAuthToken'\n\n\n// Load user\nexport const loadUser = () => async dispatch => {\n  // Check local storage and set header with token\n  if (localStorage.token) {\n    setAuthToken(localStorage.token)\n  }\n\n  // Make request\n  try {\n    const res = await axios.get('/api/auth')\n    // Dispatch user loaded & send user as payload to action type in reducer\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    })\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    })\n  }\n}\n\n\n// Register user\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const body = JSON.stringify({ name, email, password })\n\n  try {\n    const res = await axios.post('/api/users', body, config)\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    })\n    dispatch(loadUser())\n  } catch (err) {\n    const errors = err.response.data.errors\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    })\n  }\n}\n\n\n// Login user\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const body = JSON.stringify({ email, password })\n\n  try {\n    const res = await axios.post('/api/auth', body, config)\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    })\n    dispatch(loadUser())\n  } catch (err) {\n    const errors = err.response.data.errors\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    })\n  }\n}\n\n\n// Logout / Clear profile\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE })\n  dispatch({ type: LOGOUT })\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { logout } from '../../actions/auth'\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Developers</Link>\n      </li>\n      <li>\n        <Link to='/posts'>Posts</Link>\n      </li>\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user'></i>{' '}\n          <span className='hide-sm'>Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <a onClick={logout} href='#!' >\n          <i className='fas fa-sign-out-alt'></i>{' '}\n          <span className='hide-sm'>Logout</span>\n        </a>\n      </li>\n    </ul>\n  )\n\n  const guestLinks = (\n    <ul>\n      <li><Link to='/profiles'>Developers</Link></li>\n      <li><Link to='/register'>Register</Link></li>\n      <li><Link to='/login'>Login</Link></li>\n    </ul>\n  )\n\n\n  return (\n    <nav className='navbar bg-dark'>\n      <h1>\n        <Link to='/'>\n          <i className='fas fa-code'></i> Developer Hub\n          </Link>\n      </h1>\n      {!loading && (<>{isAuthenticated ? authLinks : guestLinks}</>)}\n    </nav>\n  )\n\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar)","import React from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nexport const Landing = ({ isAuthenticated }) => {\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />\n  }\n\n  return (\n    <section className=\"landing\">\n      <div className=\"dark-overlay\">\n        <div className=\"landing-inner\">\n          <h1 className=\"x-large\">Developer Hub</h1>\n          <p className=\"lead\">\n            Create a developer profile/portfolio, share posts and get help from other developers\n          </p>\n          <div className=\"buttons\">\n            <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\n            <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Landing)","import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../actions/alert'\nimport { register } from '../../actions/auth'\nimport PropTypes from 'prop-types'\n\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  })\n\n  const { name, email, password, password2 } = formData\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n  const onSubmit = async e => {\n    e.preventDefault()\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger')\n    } else {\n      register({ name, email, password })\n    }\n  }\n\n  // Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />\n  }\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">Sign Up</h1>\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n      <form className=\"form\" action=\"create-profile.html\" onSubmit={e => onSubmit(e)}>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={name}\n            onChange={e => onChange(e)}\n          // required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={e => onChange(e)}\n          // required\n          />\n          <small className=\"form-text\">\n            This site uses Gravatar so if you want a profile image, use a Gravatar email\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            minLength=\"6\"\n            value={password}\n            onChange={e => onChange(e)}\n          // required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            minLength=\"6\"\n            value={password2}\n            onChange={e => onChange(e)}\n          // required\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </>\n  )\n}\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { setAlert, register })(Register)","import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { login } from '../../actions/auth'\n\n\nconst Login = ({ login, isAuthenticated }) => {\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  })\n\n  const { email, password } = formData\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n  const onSubmit = async e => {\n    e.preventDefault()\n    login(email, password)\n  }\n\n  // Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />\n  }\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">Sign In</h1>\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\n\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            minLength=\"6\"\n            value={password}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n      </form>\n\n      <p className=\"my-1\">\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\n      </p>\n    </>\n  )\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { login })(Login)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nconst Alert = ({ alerts }) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\n  <div\n    key={alert.id}\n    className={`alert alert-${alert.alertType}`}>\n    {alert.msg}\n  </div>\n))\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n})\n\nexport default connect(mapStateToProps)(Alert)\n","// ------------------\n// Actions / profile\n// ------------------\n\nimport axios from 'axios'\nimport { setAlert } from './alert'\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n  GET_REPOS\n} from './types'\n\n\n// Get current user's profile\nexport const getCurrentProfile = () => async dispatch => {\n\n  try {\n    const res = await axios.get('/api/profile/me')\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    })\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Get all profiles\nexport const getProfiles = () => async dispatch => {\n\n  dispatch({ type: CLEAR_PROFILE })\n\n  try {\n    const res = await axios.get('/api/profile')\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    })\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Get profile by ID\nexport const getProfileById = userId => async dispatch => {\n\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`)\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    })\n\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Get github repos\nexport const getGithubRepos = username => async dispatch => {\n\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`)\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    })\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Create or update profile\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const res = await axios.post('/api/profile', formData, config)\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    })\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'))\n\n    if (!edit) {\n      history.push('/dashboard')\n    }\n\n  } catch (err) {\n    const errors = err.response.data.errors\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    })\n\n  }\n}\n\n\n// Add experience\nexport const addExperience = (formData, history) => async dispatch => {\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const res = await axios.put('/api/profile/experience', formData, config)\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    })\n    dispatch(setAlert('Experience Added', 'success'))\n    history.push('/dashboard')\n\n  } catch (err) {\n    const errors = err.response.data.errors\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.message, 'danger')))\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    })\n  }\n}\n\n\n// Add education\nexport const addEducation = (formData, history) => async dispatch => {\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const res = await axios.put('/api/profile/education', formData, config)\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    })\n    dispatch(setAlert('Education Added', 'success'))\n    history.push('/dashboard')\n\n  } catch (err) {\n    const errors = err.response.data.errors\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.message, 'danger')))\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    })\n  }\n}\n\n\n// Delete experience\nexport const deleteExperience = id => async dispatch => {\n\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`)\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    })\n    dispatch(setAlert('Experience Deleted', 'success'))\n\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    })\n  }\n}\n\n\n// Delete education\nexport const deleteEducation = id => async dispatch => {\n\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`)\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    })\n    dispatch(setAlert('Education Deleted', 'success'))\n\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    })\n  }\n}\n\n\n// Delete account & profile\nexport const deleteAccount = () => async dispatch => {\n\n  if (window.confirm('Are you sure you want to delete your account? This action is permanent and cannot be undone.')) {\n\n    try {\n      await axios.delete(`/api/profile`)\n\n      dispatch({ type: CLEAR_PROFILE })\n      dispatch({ type: ACCOUNT_DELETED })\n      dispatch(setAlert('Your account has been permanently deleted', 'success'))\n\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      })\n    }\n  }\n\n}","import React from 'react'\nimport spinner from './spinner.gif'\n\nexport default () => (\n  <>\n    <img src={spinner}\n      style={{\n        width: '500px',\n        margin: 'auto',\n        display: 'block'\n      }}\n      alt='Loading...'\n    />\n  </>\n)","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nconst DashboardActions = () => {\n  return (\n    <div className=\"dash-buttons\">\n      <Link to=\"/edit-profile\" className=\"btn btn-light\">\n        <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\n      </Link>\n      <Link to=\"/add-experience\" className=\"btn btn-light\">\n        <i className=\"fab fa-black-tie text-primary\"></i> Add Experience\n      </Link>\n      <Link to=\"/add-education\" className=\"btn btn-light\">\n        <i className=\"fas fa-graduation-cap text-primary\"></i> Add Education\n      </Link>\n    </div>\n  )\n}\n\nexport default DashboardActions","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Moment from 'react-moment'\nimport { deleteExperience } from '../../actions/profile'\n\nconst Experience = ({ experience, deleteExperience }) => {\n\n  const experiences = experience.map(exp => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className=\"hide-sm\">{exp.title}</td>\n      <td>\n        <Moment format='MM/DD/YY'>{exp.from}</Moment> - {\n          exp.to === null ? ('Now') : (<Moment format='MM/DD/YY'>{exp.to}</Moment>)\n        }\n      </td>\n      <td>\n        <button\n          onClick={() => deleteExperience(exp._id)}\n          className='btn btn-danger'\n        >Delete\n        </button>\n      </td>\n    </tr>\n  ))\n\n  return (\n    <>\n      <h2 className='my-2'>Experience Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className='hide-sm'>Title</th>\n            <th className='hide-sm'>Years</th>\n          </tr>\n        </thead>\n        <tbody>\n          {experiences}\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteExperience })(Experience)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Moment from 'react-moment'\nimport { deleteEducation } from '../../actions/profile'\n\nconst Education = ({ education, deleteEducation }) => {\n\n  const educations = education.map(edu => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className=\"hide-sm\">{edu.degree}</td>\n      <td>\n        <Moment format='MM/DD/YY'>{edu.from}</Moment> - {\n          edu.to === null ? ('Now') : (<Moment format='MM/DD/YY'>{edu.to}</Moment>)\n        }\n      </td>\n      <td>\n        <button\n          onClick={() => deleteEducation(edu._id)}\n          className='btn btn-danger'\n        >Delete\n        </button>\n      </td>\n    </tr>\n  ))\n\n  return (\n    <>\n      <h2 className='my-2'>Education Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className='hide-sm'>Degree</th>\n            <th className='hide-sm'>Years</th>\n          </tr>\n        </thead>\n        <tbody>\n          {educations}\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  deleteEducation: PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteEducation })(Education)\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile'\nimport Spinner from '../layouts/Spinner'\nimport DashboardActions from './DashboardActions'\nimport Experience from './Experience'\nimport Education from './Education'\n\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, loading }\n}) => {\n\n  useEffect(() => {\n    getCurrentProfile()\n  }, [getCurrentProfile])\n\n  return loading && profile === null ? <Spinner /> : <>\n    <h1 className='large text-primary'>Dashboard</h1>\n    <p className='lead'>\n      <i className='fas fa-user'></i> Welcome {user && user.name}\n    </p>\n    {profile !== null ? (\n      <>\n        <DashboardActions />\n        <Experience experience={profile.experience} />\n        <Education education={profile.education} />\n        <div className=\"my-2\">\n          <button className=\"btn btn-danger\" onClick={deleteAccount}>\n            <i className=\"fas fa-user minus\"></i> Delete My Account\n          </button>\n        </div>\n      </>\n    ) : (\n        <>\n          <p>You haven't set up a profile yet. Please add some info.</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create Profile\n          </Link>\n        </>\n      )}\n  </>\n\n}\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard)\n","import React, { useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createProfile } from '../../actions/profile'\n\nconst CreateProfile = ({ createProfile, history }) => {\n\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  })\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false)\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n  const onSubmit = e => {\n    e.preventDefault()\n    createProfile(formData, history)\n  }\n\n  return (\n    <>\n      <h1 className='large text-primary'>\n        Create Your Profile\n      </h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'\n          >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className='form-group'>\n          <input type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>If you want your latest repos and a Github link, include your username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}>\n          </textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)} type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && <>\n          <div className='form-group social-input'>\n            <i className='fab fa-twitter fa-2x'></i>\n            <input\n              type='text'\n              placeholder='Twitter URL'\n              name='twitter'\n              value={twitter}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group social-input'>\n            <i className='fab fa-facebook fa-2x'></i>\n            <input\n              type='text'\n              placeholder='Facebook URL'\n              name='facebook'\n              value={facebook}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group social-input'>\n            <i className='fab fa-youtube fa-2x'></i>\n            <input\n              type='text'\n              placeholder='YouTube URL'\n              name='youtube'\n              value={youtube}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group social-input'>\n            <i className='fab fa-linkedin fa-2x'></i>\n            <input\n              type='text'\n              placeholder='Linkedin URL'\n              name='linkedin'\n              value={linkedin}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group social-input'>\n            <i className='fab fa-instagram fa-2x'></i>\n            <input\n              type='text'\n              placeholder='Instagram URL'\n              name='instagram'\n              value={instagram}\n              onChange={e => onChange(e)}\n            />\n          </div>\n        </>}\n\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  )\n}\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired\n}\n\nexport default connect(null, { createProfile })(withRouter(CreateProfile))\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createProfile, getCurrentProfile } from '../../actions/profile'\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history\n}) => {\n\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  })\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false)\n\n  useEffect(() => {\n    getCurrentProfile()\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\n    })\n  }, [loading, getCurrentProfile])\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n  const onSubmit = e => {\n    e.preventDefault()\n    createProfile(formData, history, true)\n  }\n\n  return (\n    <>\n      <h1 className='large text-primary'>\n        Create Your Profile\n      </h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n\n        <div className='form-group'>\n          <select name='status' value={status} onChange={onChange}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your username\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={onChange}>\n          </textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)} type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && <>\n          <div className='form-group social-input'>\n            <i className='fab fa-twitter fa-2x'></i>\n            <input type='text' placeholder='Twitter URL' name='twitter'\n              value={twitter}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className='form-group social-input'>\n            <i className='fab fa-facebook fa-2x'></i>\n            <input\n              type='text'\n              placeholder='Facebook URL'\n              name='facebook'\n              value={facebook}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className='form-group social-input'>\n            <i className='fab fa-youtube fa-2x'></i>\n            <input\n              type='text'\n              placeholder='YouTube URL'\n              name='youtube'\n              value={youtube}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className='form-group social-input'>\n            <i className='fab fa-linkedin fa-2x'></i>\n            <input\n              type='text'\n              placeholder='Linkedin URL'\n              name='linkedin'\n              value={linkedin}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className='form-group social-input'>\n            <i className='fab fa-instagram fa-2x'></i>\n            <input\n              type='text'\n              placeholder='Instagram URL'\n              name='instagram'\n              value={instagram}\n              onChange={onChange}\n            />\n          </div>\n        </>}\n\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  )\n}\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile))\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\n\n  <Route\n    {...rest} render={props =>\n      !isAuthenticated && !loading ? (<Redirect to='/login' />) : (<Component {...props} />)\n    }\n  />\n)\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React, { useState } from 'react'\nimport {\n  Link\n  // , withRouter \n} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addExperience } from '../../actions/profile'\n\nconst AddExperience = ({ addExperience, history }) => {\n\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  })\n\n  const [toDateDisabled, toggleDisabled] = useState(false)\n\n  const {\n    company,\n    title,\n    location,\n    from,\n    to,\n    current,\n    description\n  } = formData\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n  const onSubmit = e => {\n    e.preventDefault()\n    addExperience(formData, history)\n  }\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">\n        Add An Experience\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Job Title\"\n            name=\"title\"\n            value={title}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Company\"\n            name=\"company\"\n            value={company}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={onChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={from}\n            onChange={onChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={current}\n              value={current}\n              onChange={e => {\n                setFormData({ ...formData, current: !current })\n                toggleDisabled(!toDateDisabled)\n              }}\n            />\n            {' '}Current Job\n          </p>\n        </div>\n\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            onChange={onChange}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Job Description\"\n            value={description}\n            onChange={onChange}\n          ></textarea>\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </>\n  )\n}\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addExperience })(AddExperience)\n","import React, { useState } from 'react'\nimport {\n  Link\n  // , withRouter \n} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addEducation } from '../../actions/profile'\n\nconst AddEducation = ({ addEducation, history }) => {\n\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  })\n\n  const [toDateDisabled, toggleDisabled] = useState(false)\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description\n  } = formData\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n  const onSubmit = e => {\n    e.preventDefault()\n    addEducation(formData, history)\n  }\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">\n        Add Your Education\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp that you have attended\n      </p>\n      <small>* = required field</small>\n\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* School or Bootcamp\"\n            name=\"school\"\n            value={school}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Degree or Certificate\"\n            name=\"degree\"\n            value={degree}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Field of Study\"\n            name=\"fieldofstudy\"\n            value={fieldofstudy}\n            onChange={onChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={from}\n            onChange={onChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={current}\n              value={current}\n              onChange={e => {\n                setFormData({ ...formData, current: !current })\n                toggleDisabled(!toDateDisabled)\n              }}\n            />\n            {' '}Current School\n          </p>\n        </div>\n\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            onChange={onChange}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Program Description\"\n            value={description}\n            onChange={onChange}\n          ></textarea>\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </>\n  )\n}\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addEducation })(AddEducation)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills\n  }\n}) => {\n  return (\n    <div className='profile bg-light'>\n      <img src={avatar} alt={avatar} className='round-img' />\n\n      <div>\n        <h2>{name}</h2>\n        <p>{status} {company && <span>at {company}</span>}</p>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\n          View Profile\n        </Link>\n      </div>\n\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className=\"fas fa-check\"></i> {skill}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n\n  )\n}\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired\n}\n\nexport default ProfileItem\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layouts/Spinner'\nimport { getProfiles } from '../../actions/profile'\nimport ProfileItem from './ProfileItem'\n\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n\n  // As soon as loads run getProfiles. Only run once, use []. This puts profiles into state.\n  useEffect(() => {\n    getProfiles()\n  }, [getProfiles])\n\n  return (\n    <>\n      {\n        loading ? <Spinner /> : <>\n          <h1 className=\"large text-primary\">Developers</h1>\n          <p className=\"lead\">\n            <i className=\"fab fa-connectdevelop\"></i> Browse and connect with developers\n          </p>\n          <div className=\"profiles\">\n            {profiles.length > 0 ? (\n              profiles.map(profile => (<ProfileItem key={profile._id} profile={profile} />))\n            ) : <h4>No profiles found...</h4>}\n          </div>\n        </>\n      }\n    </>\n  )\n}\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport { connect } from 'react-redux'\nimport { addLike, removeLike, deletePost } from '../../actions/post'\n\nconst PostItem = (\n  {\n    addLike,\n    removeLike,\n    deletePost,\n    auth,\n    post: { _id, text, name, avatar, user, likes, comments, date },\n    showActions\n  }\n) => (\n\n    <div className='post bg-white p-1 my-1'>\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className='round-img' src={avatar} alt='' />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n\n      <div>\n        <p className='my-1'>{text}</p>\n        <p className='post-date'>\n          Posted on <Moment format='MM/DD/YYYY'>{date}</Moment>\n        </p>\n\n        {showActions && (\n          <>\n\n            <button\n              onClick={() => addLike(_id)}\n              type='button'\n              className='btn btn-light'\n            >\n              <i className='fas fa-thumbs-up' />{' '}\n              <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n            </button>\n\n            <button\n              onClick={() => removeLike(_id)}\n              type='button'\n              className='btn btn-light'\n            >\n              <i className='fas fa-thumbs-down' />\n            </button>\n\n            <Link to={`/posts/${_id}`} className='btn btn-primary'>\n              Discussion{' '}\n              {comments.length > 0 && (\n                <span className='comment-count'>{comments.length}</span>\n              )}\n            </Link>\n\n            {!auth.loading && user === auth.user._id && (\n              <button\n                onClick={() => deletePost(_id)}\n                type='button'\n                className='btn btn-danger'\n              >\n                <i className='fas fa-times' />\n              </button>\n            )}\n\n          </>\n        )}\n\n      </div>\n    </div>\n  )\n\nPostItem.defaultProps = {\n  showActions: true\n}\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem)","import axios from 'axios'\nimport { setAlert } from './alert'\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from './types'\n\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n\n  try {\n    const res = await axios.get('/api/posts')\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    })\n\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Add like\nexport const addLike = id => async dispatch => {\n\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`)\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    })\n\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Remove like\nexport const removeLike = id => async dispatch => {\n\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`)\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    })\n\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Delete post\nexport const deletePost = id => async dispatch => {\n\n  try {\n    await axios.delete(`/api/posts/${id}`)\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    })\n\n    dispatch(setAlert('Post Removed', 'success'))\n\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Add post\nexport const addPost = formData => async dispatch => {\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config)\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    })\n\n    dispatch(setAlert('Post Created', 'success'))\n\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Get post\nexport const getPost = id => async dispatch => {\n\n  try {\n    const res = await axios.get(`/api/posts/${id}`)\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    })\n\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config)\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    })\n\n    dispatch(setAlert('Comment Added', 'success'))\n\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    })\n  }\n}\n\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addPost } from '../../actions/post'\n\nconst PostForm = ({ addPost }) => {\n\n  const [text, setText] = useState('')\n\n  return (\n    <div className=\"post-form\">\n      <div className=\"bg-primary p\">\n        <h3>Say Something...</h3>\n      </div>\n\n      <form\n        className=\"form my-1\"\n        onSubmit={e => {\n          e.preventDefault()\n          addPost({ text })\n          setText('')\n        }}>\n        <textarea\n          name=\"text\"\n          cols=\"30\"\n          rows=\"5\"\n          placeholder=\"Create a post\"\n          value={text}\n          required\n          onChange={e => setText(e.target.value)}\n        ></textarea>\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n      </form>\n\n    </div>\n  )\n}\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addPost })(PostForm)\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getPosts } from '../../actions/post'\nimport PostItem from './PostItem'\nimport Spinner from '../layouts/Spinner'\nimport PostForm from './PostForm'\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n\n  useEffect(() => {\n    getPosts()\n  }, [getPosts])\n\n  return (\n    loading ? <Spinner /> :\n      <>\n        <h1 className=\"large text-primary\">Posts</h1>\n\n        <p className=\"lead\">\n          <i className=\"fas fa-user\"></i> Welcome to the Community\n        </p>\n\n        <PostForm />\n\n        <div className=\"posts\">\n          {posts.map(post => (\n            <PostItem key={post._id} post={post} />\n          ))}\n        </div>\n\n      </>\n  )\n\n}\n\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  post: state.post\n})\n\nexport default connect(mapStateToProps, { getPosts })(Posts)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addComment } from '../../actions/post'\n\nconst CommentForm = ({ postId, addComment }) => {\n\n  const [text, setText] = useState('')\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Leave a Comment</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={e => {\n          e.preventDefault()\n          addComment(postId, { text })\n          setText('')\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Comment the post'\n          value={text}\n          onChange={e => setText(e.target.value)}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  )\n}\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addComment })(CommentForm)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Moment from 'react-moment'\nimport { deleteComment } from '../../actions/post'\n\nconst CommentItem = (\n  {\n    postId,\n    comment: { _id, text, name, avatar, user, date },\n    auth,\n    deleteComment\n  }\n) => (\n\n    <div className='post bg-white p-1 my-1'>\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className='round-img' src={avatar} alt='' />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n\n      <div>\n        <p className='my-1'>{text}</p>\n        <p className='post-date'>\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n\n        {!auth.loading && user === auth.user._id && (\n          <button\n            onClick={() => deleteComment(postId, _id)}\n            type='button'\n            className='btn btn-danger'\n          >\n            <i className='fas fa-times' />\n          </button>\n        )}\n      </div>\n    </div>\n  )\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(\n  mapStateToProps,\n  { deleteComment }\n)(CommentItem)","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n      <>\n        <Link to=\"/posts\" className=\"btn\">\n          Back To Posts\n        </Link>\n\n        <PostItem post={post} showActions={false} />\n\n        <CommentForm postId={post._id} />\n\n        <div className=\"comments\">\n          {post.comments.map(comment => (\n            <CommentItem\n              key={comment._id}\n              comment={comment}\n              postId={post._id}\n            />\n          ))}\n        </div>\n\n      </>\n    );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);","// -----------------\n// Reducers / alert\n// -----------------\n\nimport { SET_ALERT, REMOVE_ALERT } from '../actions/types'\n\nconst initialState = []\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload]\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload)\n    default:\n      return state\n  }\n}","// -----------------\n// Reducers / auth\n// -----------------\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from '../actions/types'\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n}\n\nexport default function (state = initialState, action) {\n\n  const { type, payload } = action\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      }\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token)\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      }\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token')\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      }\n    default:\n      return state\n  }\n}","import {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  GET_REPOS,\n  UPDATE_PROFILE\n} from \"../actions/types\"\n\n// -------------------\n// Reducers / profile\n// -------------------\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n}\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      }\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      }\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      }\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false\n      }\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false\n      }\n    default:\n      return state\n  }\n}","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from '../actions/types'\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n}\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      }\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      }\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      }\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      }\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      }\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post),\n        loading: false\n      }\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            comment => comment._id !== payload\n          )\n        },\n        loading: false\n      };\n    default:\n      return state;\n  }\n}","// -----------------\n// Reducers / index\n// -----------------\n\nimport { combineReducers } from 'redux'\nimport alert from './alert'\nimport auth from './auth'\nimport profile from './profile'\nimport post from './post'\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post\n})","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileTop = ({\n  profile: {\n    skills,\n    status,\n    company,\n    location,\n    website,\n    social,\n    bio,\n    user: { name, avatar }\n  }\n}) => {\n  return (\n    <div className='profile-top bg-primary p-2'>\n      <img className='round-img my-1' src={avatar} alt='' />\n      <h1 className='large'>{name}</h1>\n      <p className='lead'>\n        {status} {company && <span> at {company}</span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className='icons my-1'>\n        {website && (\n          <a href={website} target='_blank' rel='noopener noreferrer'>\n            <i className='fas fa-globe fa-2x' />\n          </a>\n        )}\n        {social && social.twitter && (\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-twitter fa-2x' />\n          </a>\n        )}\n        {social && social.facebook && (\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-facebook fa-2x' />\n          </a>\n        )}\n        {social && social.linkedin && (\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-linkedin fa-2x' />\n          </a>\n        )}\n        {social && social.youtube && (\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-youtube fa-2x' />\n          </a>\n        )}\n        {social && social.instagram && (\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-instagram fa-2x' />\n          </a>\n        )}\n      </div>\n    </div>\n  )\n}\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired\n}\n\nexport default ProfileTop","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileAbout = ({ profile: { bio, skills, user: { name } } }) => {\n  return (\n    <div className=\"profile-about bg-light p-2\">\n      {bio && (\n        <>\n          <h2 className=\"text-primary\">\n            {name.trim().split(' ')[0]}'s Bio\n            </h2>\n          <p>\n            {bio}\n          </p>\n          <div className=\"line\"></div>\n        </>\n      )}\n\n      <h2 className=\"text-primary\">Skill Set</h2>\n\n      <div className=\"skills\">\n        {skills.map((skill, index) => (\n          <div className=\"p-1\" key={index}>\n            <i className=\"fa fa-check\"></i> {skill}\n          </div>\n        ))}\n      </div>\n\n    </div>\n  )\n}\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n}\n\nexport default ProfileAbout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\n\nconst ProfileExperience = ({\n  experience: {\n    company,\n    title,\n    location,\n    current,\n    to,\n    from,\n    description\n  }\n}) => {\n  return (\n    <div>\n      <h3 className=\"text-dark\">{company}</h3>\n      <p>\n        <Moment format='YYYY/MM/DD'>{from}</Moment> - {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\n      </p>\n      <p>\n        <strong>Position: </strong> {title}\n      </p>\n      <p>\n        <strong>Description: </strong> {description}\n      </p>\n    </div>\n  )\n}\n\nProfileExperience.propTypes = {\n  experience: PropTypes.object.isRequired\n}\n\nexport default ProfileExperience\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\n\nconst ProfileEducation = ({\n  education: {\n    school,\n    degree,\n    fieldofstudy,\n    current,\n    to,\n    from,\n    description\n  }\n}) => {\n  return (\n    <div>\n      <h3 className=\"text-dark\">{school}</h3>\n      <p>\n        <Moment format='YYYY/MM/DD'>{from}</Moment> - {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\n      </p>\n      <p>\n        <strong>Degree: </strong> {degree}\n      </p>\n      <p>\n        <strong>Field of Study: </strong> {fieldofstudy}\n      </p>\n      <p>\n        <strong>Description: </strong> {description}\n      </p>\n    </div>\n  )\n}\n\nProfileEducation.propTypes = {\n  education: PropTypes.object.isRequired\n}\n\nexport default ProfileEducation\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layouts/Spinner'\nimport { getGithubRepos } from '../../actions/profile'\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n\n  useEffect(() => {\n    getGithubRepos(username)\n  }, [getGithubRepos, username])\n\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n          repos.map(repo => (\n            <div key={repo.id} className=\"repo bg-white p-1 my-1\">\n\n              <div>\n                <h4>\n                  <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {repo.name}\n                  </a>\n                </h4>\n                <p>\n                  {repo.description}\n                </p>\n              </div>\n\n              <div>\n                <ul>\n                  <li className=\"badge badge-primary\">\n                    Stars: {repo.stargazers_count}\n                  </li>\n                  <li className=\"badge badge-dark\">\n                    Watchers: {repo.watchers_count}\n                  </li>\n                  <li className=\"badge badge-light\">\n                    Forks: {repo.forks_count}\n                  </li>\n                </ul>\n              </div>\n\n            </div>\n          ))\n        )}\n    </div>\n  )\n}\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n})\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub)\n","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Spinner from '../layouts/Spinner'\nimport ProfileTop from './ProfileTop'\nimport ProfileAbout from './ProfileAbout'\nimport ProfileExperience from './ProfileExperience'\nimport ProfileEducation from './ProfileEducation'\nimport ProfileGithub from './ProfileGithub'\nimport { getProfileById } from '../../actions/profile'\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id)\n  }, [getProfileById, match.params.id])\n\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n          <Fragment>\n            <Link to='/profiles' className='btn btn-light'>\n              Back To Profiles\n            </Link>\n            {auth.isAuthenticated &&\n              auth.loading === false &&\n              auth.user._id === profile.user._id && (\n                <Link to='/edit-profile' className='btn btn-dark'>\n                  Edit Profile\n                </Link>\n              )}\n\n            <div className='profile-grid my-1'>\n              <ProfileTop profile={profile} />\n              <ProfileAbout profile={profile} />\n\n              <div className=\"profile-exp bg-white p-2\">\n                <h2 className=\"text-primary\">\n                  Experience\n                </h2>\n                {profile.experience.length > 0 ? (\n                  <>\n                    {profile.experience.map(experience => (\n                      <ProfileExperience\n                        key={experience._id}\n                        experience={experience}\n                      />\n                    ))}\n                  </>\n                ) : (\n                    <h4>No experience credentials</h4>\n                  )}\n              </div>\n\n              <div className=\"profile-edu bg-white p-2\">\n                <h2 className=\"text-primary\">\n                  Education\n                </h2>\n                {profile.education.length > 0 ? (\n                  <>\n                    {profile.education.map(education => (\n                      <ProfileEducation\n                        key={education._id}\n                        education={education}\n                      />\n                    ))}\n                  </>\n                ) : (\n                    <h4>No education credentials</h4>\n                  )}\n              </div>\n\n              {profile.githubusername && (\n                <ProfileGithub username={profile.githubusername} />\n              )}\n\n            </div>\n          </Fragment>\n        )\n      }\n    </Fragment >\n  )\n}\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getProfileById })(Profile)","import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/layouts/Navbar'\nimport Landing from './components/layouts/Landing'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport Alert from './components/layouts/Alert'\nimport Dashboard from './components/dashboard/Dashboard'\nimport CreateProfile from './components/profile-forms/CreateProfile'\nimport EditProfile from './components/profile-forms/EditProfile'\nimport PrivateRoute from './components/routing/PrivateRoute'\nimport AddExperience from './components/profile-forms/AddExperience'\nimport AddEducation from './components/profile-forms/AddEducation'\nimport Profiles from './components/profiles/Profiles'\nimport Posts from './components/posts/Posts'\nimport Post from './components/post/Post'\nimport './App.css'\n\n// Redux\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { loadUser } from './actions/auth'\nimport setAuthToken from './utils/setAuthToken'\nimport Profile from './components/profile/Profile'\n\n\n\n// Check local storage and set header with token\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\nconst App = () => {\n\n  useEffect(() => { store.dispatch(loadUser()) }, [])\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute exact path='/create-profile' component={CreateProfile} />\n              <PrivateRoute exact path='/edit-profile' component={EditProfile} />\n              <PrivateRoute exact path='/add-experience' component={AddExperience} />\n              <PrivateRoute exact path='/add-education' component={AddEducation} />\n              <PrivateRoute exact path='/posts' component={Posts} />\n              <PrivateRoute exact path='/posts/:id' component={Post} />\n            </Switch>\n          </section>\n        </>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}